<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="test.IDao.SchoolInfoMapper" >
  <resultMap id="BaseResultMap" type="test.domain.SchoolInfo" >
    <id column="schoolid" property="schoolid" jdbcType="INTEGER" />
    <result column="schoolname" property="schoolname" jdbcType="VARCHAR" />
    <result column="schooltype" property="schooltype" jdbcType="INTEGER" />
    <result column="objecttype" property="objecttype" jdbcType="INTEGER" />
    <result column="schoollevel" property="schoollevel" jdbcType="INTEGER" />
    <result column="district_id" property="districtId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="characteristics" property="characteristics" jdbcType="VARCHAR" />
    <result column="advantage" property="advantage" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    schoolid, schoolname, schooltype, objecttype, schoollevel, district_id, address, 
    characteristics, advantage
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="test.domain.SchoolInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from school_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from school_info
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from school_info
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="test.domain.SchoolInfoExample" >
    delete from school_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="test.domain.SchoolInfo" >
    insert into school_info (schoolid, schoolname, schooltype, 
      objecttype, schoollevel, district_id, 
      address, characteristics, advantage
      )
    values (#{schoolid,jdbcType=INTEGER}, #{schoolname,jdbcType=VARCHAR}, #{schooltype,jdbcType=INTEGER}, 
      #{objecttype,jdbcType=INTEGER}, #{schoollevel,jdbcType=INTEGER}, #{districtId,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{characteristics,jdbcType=VARCHAR}, #{advantage,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="test.domain.SchoolInfo" >
    insert into school_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="schoolid != null" >
        schoolid,
      </if>
      <if test="schoolname != null" >
        schoolname,
      </if>
      <if test="schooltype != null" >
        schooltype,
      </if>
      <if test="objecttype != null" >
        objecttype,
      </if>
      <if test="schoollevel != null" >
        schoollevel,
      </if>
      <if test="districtId != null" >
        district_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="characteristics != null" >
        characteristics,
      </if>
      <if test="advantage != null" >
        advantage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="schoolid != null" >
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="schoolname != null" >
        #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="schooltype != null" >
        #{schooltype,jdbcType=INTEGER},
      </if>
      <if test="objecttype != null" >
        #{objecttype,jdbcType=INTEGER},
      </if>
      <if test="schoollevel != null" >
        #{schoollevel,jdbcType=INTEGER},
      </if>
      <if test="districtId != null" >
        #{districtId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="characteristics != null" >
        #{characteristics,jdbcType=VARCHAR},
      </if>
      <if test="advantage != null" >
        #{advantage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update school_info
    <set >
      <if test="record.schoolid != null" >
        schoolid = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolname != null" >
        schoolname = #{record.schoolname,jdbcType=VARCHAR},
      </if>
      <if test="record.schooltype != null" >
        schooltype = #{record.schooltype,jdbcType=INTEGER},
      </if>
      <if test="record.objecttype != null" >
        objecttype = #{record.objecttype,jdbcType=INTEGER},
      </if>
      <if test="record.schoollevel != null" >
        schoollevel = #{record.schoollevel,jdbcType=INTEGER},
      </if>
      <if test="record.districtId != null" >
        district_id = #{record.districtId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.characteristics != null" >
        characteristics = #{record.characteristics,jdbcType=VARCHAR},
      </if>
      <if test="record.advantage != null" >
        advantage = #{record.advantage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update school_info
    set schoolid = #{record.schoolid,jdbcType=INTEGER},
      schoolname = #{record.schoolname,jdbcType=VARCHAR},
      schooltype = #{record.schooltype,jdbcType=INTEGER},
      objecttype = #{record.objecttype,jdbcType=INTEGER},
      schoollevel = #{record.schoollevel,jdbcType=INTEGER},
      district_id = #{record.districtId,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      characteristics = #{record.characteristics,jdbcType=VARCHAR},
      advantage = #{record.advantage,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="test.domain.SchoolInfo" >
    update school_info
    <set >
      <if test="schoolname != null" >
        schoolname = #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="schooltype != null" >
        schooltype = #{schooltype,jdbcType=INTEGER},
      </if>
      <if test="objecttype != null" >
        objecttype = #{objecttype,jdbcType=INTEGER},
      </if>
      <if test="schoollevel != null" >
        schoollevel = #{schoollevel,jdbcType=INTEGER},
      </if>
      <if test="districtId != null" >
        district_id = #{districtId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="characteristics != null" >
        characteristics = #{characteristics,jdbcType=VARCHAR},
      </if>
      <if test="advantage != null" >
        advantage = #{advantage,jdbcType=VARCHAR},
      </if>
    </set>
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.domain.SchoolInfo" >
    update school_info
    set schoolname = #{schoolname,jdbcType=VARCHAR},
      schooltype = #{schooltype,jdbcType=INTEGER},
      objecttype = #{objecttype,jdbcType=INTEGER},
      schoollevel = #{schoollevel,jdbcType=INTEGER},
      district_id = #{districtId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      characteristics = #{characteristics,jdbcType=VARCHAR},
      advantage = #{advantage,jdbcType=VARCHAR}
    where schoolid = #{schoolid,jdbcType=INTEGER}
  </update>
</mapper>